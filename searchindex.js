Search.setIndex({"docnames": ["API", "code/cameras", "code/dataset", "code/exporter", "code/hook", "code/logger", "code/model", "code/optimizer", "code/point_cloud", "code/render", "code/trainer", "framework/data", "framework/hook", "framework/model", "framework/overall", "framework/trainer", "get_started/installation", "get_started/render_novel_view_gui", "get_started/run_first_model", "index", "tutorial/define_your_model", "tutorial/define_your_own_dataset", "tutorial/define_your_trainer", "tutorial/learning_configuration", "tutorial/tutorial"], "filenames": ["API.rst", "code/cameras.rst", "code/dataset.rst", "code/exporter.rst", "code/hook.rst", "code/logger.rst", "code/model.rst", "code/optimizer.rst", "code/point_cloud.rst", "code/render.rst", "code/trainer.rst", "framework/data.md", "framework/hook.md", "framework/model.md", "framework/overall.md", "framework/trainer.md", "get_started/installation.md", "get_started/render_novel_view_gui.md", "get_started/run_first_model.md", "index.md", "tutorial/define_your_model.md", "tutorial/define_your_own_dataset.md", "tutorial/define_your_trainer.md", "tutorial/learning_configuration.md", "tutorial/tutorial.md"], "titles": ["API", "camera", "dataset", "exporter", "hook", "logger", "model", "optimizer", "point_cloud", "renderer", "trainer", "Datapipeline", "Hook", "Model", "Overall", "Trainer", "Installation", "Using GUI and render novel view", "Run your first model", "sphinx-design", "Define your own model", "Define your own dataset", "Define your own trainer", "Learning the configuration in Pointrix", "Tutorial"], "terms": {"todo": 0, "explan": 0, "each": [0, 13, 15], "compon": [0, 13], "camera": [0, 2, 7, 9, 14, 21, 24], "basic": [0, 2, 11], "trainabl": [0, 2, 8, 13, 20], "camera_cent": [0, 1, 9, 11], "extrinsic_matrix": [0, 1, 9], "full_proj_transform": [0, 1, 9, 11], "getprojectionmatrix": [0, 1], "getworld2view": [0, 1], "image_height": [0, 1, 11], "image_width": [0, 1, 11], "intrinsic_matrix": [0, 1, 9], "load2devic": [0, 1], "projection_matrix": [0, 1], "world_view_transform": [0, 1, 9, 11], "circl": [0, 1], "dolli": [0, 1, 3], "generate_camera_path": [0, 1], "get_translate_radiu": [0, 1], "pose_to_cam": [0, 1], "spiral": [0, 1, 3], "zoom": [0, 1, 3], "trainablecamera": [0, 1], "param_group": [0, 1, 7, 12, 13], "dataset": [0, 10, 15, 19], "base": [0, 1, 4, 5, 6, 7, 9, 10, 12, 14, 15, 19, 20, 21, 24], "basedataformat": [0, 2, 11], "camera_list": [0, 1, 2, 11], "pointcloud": [0, 2, 8, 11], "image_filenam": [0, 2, 11], "imag": [0, 1, 2, 3, 5, 6, 9, 11, 13, 15], "metadata": [0, 2, 11], "basedatapipelin": [0, 2, 6, 13, 20], "config": [0, 2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 18, 20, 24], "get_param_group": [0, 2], "get_training_dataset": [0, 2], "get_validation_dataset": [0, 2], "loaddata": [0, 2], "next_train": [0, 2, 11, 12], "next_val": [0, 2, 11, 12, 24], "training_dataset_s": [0, 2, 24], "validation_dataset_s": [0, 2], "baseimagedataset": [0, 2, 11], "basereformatdata": [0, 2, 11, 21, 24], "load_all_imag": [0, 2, 11], "load_camera": [0, 2, 11, 21, 24], "load_data_list": [0, 2, 11], "load_image_filenam": [0, 2, 11], "load_metadata": [0, 2, 11], "load_pointcloud": [0, 2, 11, 21, 24], "simplepointcloud": [0, 2, 8, 11, 21, 24], "nerf": 0, "nerfreformat": [0, 2], "colmap": [0, 11, 20], "colmapreformat": [0, 2], "point_cloud": [0, 6, 7, 12, 13, 20, 24], "point": [0, 3, 6, 7, 9, 11, 12, 14, 19, 20, 21, 24], "cloud": [0, 3, 6, 7, 9, 11, 14, 20], "extand_point": [0, 8], "extend_optim": [0, 8], "get_all_atribut": [0, 8], "list_of_attribut": [0, 8], "load_pli": [0, 6, 8, 13], "prune_optim": [0, 8, 13], "re_init": [0, 8], "register_atribut": [0, 8, 13], "remove_point": [0, 8, 13], "replac": [0, 8, 13], "replace_optim": [0, 8], "save_pli": [0, 8, 13], "select_atribut": [0, 8], "set_all_atributes_train": [0, 8], "set_prefix_nam": [0, 8, 13, 20], "setup": [0, 8, 13, 16], "unwarp": [0, 8, 13], "gaussian": [0, 2, 7, 11, 13, 14, 16, 20, 24], "gaussianpointcloud": [0, 8, 20], "export": 0, "render": [0, 5, 6, 10, 11, 12, 13, 14, 15, 19, 20, 24], "novel": [0, 15, 19], "view": [0, 1, 7, 9, 11, 15, 19], "novel_view_rend": [0, 3], "test_view_rend": [0, 3], "hook": [0, 10, 14, 15, 19], "after_load_checkpoint": [0, 4], "after_run": [0, 4], "after_train": [0, 4, 12], "after_train_it": [0, 4, 12], "after_v": [0, 4, 12], "after_val_it": [0, 4, 12, 24], "before_run": [0, 4, 12], "before_train": [0, 4, 12], "before_train_it": [0, 4, 12], "before_v": [0, 4, 12], "before_val_it": [0, 4, 12, 24], "checkpointhook": [0, 4, 12], "loghook": [0, 4, 12], "logger": [0, 12, 14, 15], "itersperseccolumn": [0, 5], "logcolumn": [0, 5], "progresslogg": [0, 5, 12], "add_task": [0, 5], "reset": [0, 5, 7, 13], "start": [0, 4, 5, 15, 16], "start_task": [0, 5], "stop": [0, 5], "stop_task": [0, 5], "updat": [0, 5, 6, 7, 9, 12, 13, 15], "tensorboardwrit": [0, 5, 12], "write_config": [0, 5, 12], "write_imag": [0, 5, 12], "write_scalar": [0, 5, 12], "wandbwrit": [0, 5], "writer": [0, 5, 10, 12], "model": [0, 2, 3, 7, 8, 10, 11, 12, 15, 19, 21], "basemodel": [0, 3, 6, 13, 20, 24], "forward": [0, 6, 13, 15, 20, 24], "get_loss_dict": [0, 6, 13, 24], "get_metric_dict": [0, 6, 12, 13, 24], "get_optimizer_dict": [0, 6, 13, 24], "load_state_dict": [0, 6, 7], "optim": [0, 6, 8, 10, 12, 15, 24], "baseoptim": [0, 7], "get_lr": [0, 7], "get_momentum": [0, 7], "state_dict": [0, 6, 7], "update_model": [0, 7, 12, 13], "optimizerlist": [0, 7, 13], "gaussiansplattingoptim": [0, 7], "accumulate_viewspace_grad": [0, 7, 13], "cfg": [0, 2, 6, 7, 8, 9, 10, 12, 13, 20, 24], "densif": [0, 7], "densify_clon": [0, 7], "densify_split": [0, 7], "generate_clone_mask": [0, 7], "generate_split_mask": [0, 7], "new_pos_scal": [0, 7], "prune": [0, 7, 8, 13], "prune_postprocess": [0, 7], "reset_densification_st": [0, 7], "reset_opac": [0, 7], "update_hyp": [0, 7, 13], "update_structur": [0, 7, 13], "exponlrschedul": [0, 7], "get_expon_lr_func": [0, 7], "step": [0, 2, 5, 7, 10, 12, 13, 14, 15, 16, 24], "dptrrender": [0, 9], "render_batch": [0, 9, 12, 24], "render_it": [0, 9], "trainer": [0, 2, 4, 11, 12, 13, 14, 19, 20, 21], "defaulttrain": [0, 10, 12, 24], "call_hook": [0, 10, 12, 15, 24], "test": [0, 3, 10, 12, 15], "train_loop": [0, 10, 12, 15, 24], "train_step": [0, 10, 12, 15, 24], "class": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 24], "pointrix": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 18, 20, 21], "idx": [1, 11], "int": [1, 2, 5, 7, 8, 9, 10, 13], "width": [1, 9, 11], "height": [1, 9, 11], "r": [1, 16], "float": [1, 2, 5, 6, 7, 8, 9, 11, 13, 20, 21, 24], "tensor": [1, 5, 6, 7, 8, 9, 13, 24], "3": [1, 8, 9, 11, 13, 16, 20, 21, 24], "ndarrai": 1, "ani": [1, 2, 5, 6, 11], "dtype": 1, "_scalartype_co": 1, "t": [1, 11], "1": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 21, 24], "fx": 1, "none": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24], "fy": 1, "cx": 1, "cy": 1, "fovx": [1, 9, 11], "fovi": [1, 9, 11], "bg": 1, "0": [1, 2, 6, 7, 8, 9, 10, 12, 13, 16, 20, 21, 24], "rgb_file_nam": 1, "str": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 24], "rgb_file_path": 1, "radiu": [1, 7, 11], "fid": [1, 24], "scene_scal": 1, "object": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "us": [1, 2, 4, 6, 7, 9, 10, 11, 13, 15, 19, 20], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 24], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 20, 24], "index": [1, 11], "rotat": [1, 9, 13, 20, 24], "matrix": [1, 9, 11], "translat": 1, "vector": [1, 11], "focal": 1, "length": [1, 2, 11, 13], "x": [1, 9], "direct": 1, "y": [1, 9], "center": [1, 9], "field": [1, 2, 6, 9, 11, 13, 20], "background": [1, 6, 7, 9, 13], "color": [1, 2, 9, 21, 24], "path": [1, 2, 3, 5, 6, 8, 10, 11, 12, 13, 18, 21, 24], "scale": [1, 2, 7, 9, 11, 13, 20, 21, 24], "scene": [1, 2, 11], "note": [1, 2, 11], "ar": [1, 2, 6, 11, 12, 13, 15, 19, 20], "mutual": 1, "exclus": 1, "If": [1, 6, 11, 13, 15, 19, 20], "provid": [1, 11, 12, 13, 15], "calcul": [1, 13, 15], "from": [1, 6, 8, 11, 12, 13, 14, 16, 19, 21, 24], "them": [1, 6, 11, 21, 24], "exampl": [1, 2, 5, 8, 11, 12, 13, 21, 24], "800": 1, "600": 1, "np": [1, 2, 21, 24], "ey": 1, "zero": [1, 21, 24], "focal_length_x": 1, "focal_length_i": 1, "1_rgb": 1, "png": 1, "2": [1, 6, 7, 8, 11, 13, 16, 20], "properti": [1, 2, 6, 7, 19], "get": [1, 6, 7, 11, 13, 15, 16], "return": [1, 2, 6, 7, 8, 9, 11, 13, 14, 20, 21, 24], "_camera_cent": 1, "type": [1, 2, 6, 7, 8, 9, 13, 14, 19, 24], "4": [1, 12, 13], "extrins": [1, 14], "_extrinsic_matrix": 1, "full": [1, 9, 21, 24], "project": [1, 5, 9, 16, 18, 21, 24], "_full_proj_transform": 1, "static": 1, "znear": 1, "01": [1, 7, 24], "zfar": 1, "100": [1, 7], "plane": 1, "far": 1, "p": 1, "onli": [1, 2, 7, 11, 13], "world": [1, 9], "transform": [1, 9, 11], "rt": 1, "intrins": [1, 14], "_intrinsic_matrix": 1, "devic": [1, 3, 6, 9, 10, 11, 12, 13, 20, 24], "load": [1, 2, 4, 6, 8, 11, 13, 15, 21, 24], "all": [1, 2, 6, 7, 8, 11, 13, 14, 15, 20], "thi": [1, 6, 7, 11, 13, 15, 18, 24], "function": [1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 15, 19, 20, 21, 24], "part": [1, 12, 13, 15, 20, 21, 24], "_projection_matrix": 1, "_world_view_transform": 1, "list": [1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 24], "which": [1, 2, 6, 7, 11, 12, 13, 15, 19, 20, 24], "gener": [1, 2, 7, 11, 13, 14, 15, 24], "camera1": 1, "camera2": 1, "sc": 1, "num_fram": 1, "c2w": 1, "number": [1, 5, 13], "frame": 1, "camera_path": 1, "mode": 1, "pose": 1, "group": [1, 7, 13], "fix": [1, 12], "base_data": [2, 21, 24], "pathlib": 2, "pil": 2, "dict": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 24], "factori": [2, 6, 8, 10], "standard": [2, 11, 14], "data": [2, 3, 5, 6, 9, 10, 13, 18, 20, 21, 24], "format": [2, 11, 14, 21, 24], "datapipelin": [2, 3, 6, 12, 13, 19, 24], "filenam": [2, 11], "option": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 20], "need": [2, 7, 11, 13, 16, 18, 20, 21, 24], "when": [2, 6, 11, 13], "cach": [2, 11], "i": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 19, 20, 21, 24], "enabl": [2, 11], "union": [2, 5, 6, 11, 13, 20], "initi": [2, 6, 7, 8, 11, 13, 15, 20], "better": [2, 11], "result": [2, 6, 11, 13, 14, 15], "default_factori": [2, 11, 13, 20], "lambda": [2, 11], "other": [2, 11, 13, 15, 16], "inform": [2, 11, 12], "requir": [2, 11, 13, 16, 20, 24], "order": [2, 11], "consist": [2, 11], "precomput": [2, 11], "dataformat": [2, 21, 24], "piplin": 2, "configur": [2, 6, 7, 9, 10, 11, 12, 13, 15, 19, 20], "alwai": [2, 13], "call": [2, 6, 7, 10, 11, 12, 13, 15], "build_data_piplin": 2, "data_path": [2, 21, 24], "data_typ": [2, 21, 24], "nerf_synthet": 2, "cached_imag": [2, 11, 21, 24], "bool": [2, 5, 6, 7, 8, 9, 10, 11, 13, 21, 24], "true": [2, 5, 6, 8, 10, 13, 20, 21, 24], "shuffl": [2, 21], "batch_siz": [2, 10, 21], "num_work": [2, 10, 21], "white_bg": [2, 6, 7, 9, 13, 21, 24], "fals": [2, 6, 7, 9, 21, 24], "use_dataload": 2, "train": [2, 4, 5, 7, 10, 11, 12, 13, 15, 18, 21, 24], "valid": [2, 4, 7, 11, 12, 15, 24], "dataload": [2, 11], "batch": [2, 6, 7, 9, 10, 11, 12, 13, 20, 24], "progress": [2, 5, 12], "size": [2, 11, 13], "format_data": [2, 11], "image_file_nam": [2, 11], "necessari": 2, "data_root": [2, 11, 21, 24], "split": [2, 7, 11, 13, 14, 21, 24], "foundat": [2, 11, 19], "root": [2, 11], "whether": [2, 6, 7, 8, 9, 11, 13], "memori": [2, 11], "typic": [2, 11], "user": [2, 11, 14], "custom": [2, 12, 13, 14, 15], "abstract": [2, 5, 12], "file": [2, 6, 8, 12, 13, 15, 18, 24], "name": [2, 5, 8, 10, 12, 13, 20, 21, 24], "posit": [2, 7, 8, 9, 12, 13, 20, 21, 24], "arrai": 2, "normal": [2, 13, 21, 24], "simpl": [2, 16, 24], "nerf_data": 2, "colmap_data": [2, 11], "novel_view": 3, "output_path": [3, 10, 20, 21], "novel_view_list": 3, "cuda": [3, 6, 10, 12, 13, 16, 20, 24], "save": [3, 4, 5, 8, 11, 12, 13, 15], "output": [3, 6, 10, 13], "pipelin": [3, 6, 11, 13, 14, 15, 20], "default": [3, 5, 6, 7, 9, 10, 12, 13, 15, 20, 24], "A": [4, 5, 7, 8, 9, 12, 14, 19], "can": [4, 7, 11, 12, 13, 15, 18, 19, 20, 21, 24], "modifi": [4, 9, 12, 13, 18, 20, 21], "behavior": 4, "trainner": [4, 12], "checkpoint": [4, 12], "some": [4, 11, 12, 13, 15], "oper": [4, 12, 13, 14, 24], "after": [4, 6, 7, 11, 12, 15], "resum": 4, "run": [4, 19], "end": [4, 12, 15], "loop": [4, 10, 11, 12, 15], "iter": [4, 5, 9, 11, 12, 13], "befor": [4, 15], "checkpoint_hook": 4, "dure": [4, 11, 12], "log_hook": 4, "log": [4, 5, 12, 13], "loss": [4, 6, 7, 11, 12, 13, 15, 20, 24], "print": [4, 12, 24], "suffix": 5, "": [5, 6, 11, 12, 13], "progresscolumn": 5, "per": [5, 11], "second": 5, "bar": 5, "task": [5, 19], "text": 5, "show": [5, 11, 13], "transfer": 5, "speed": 5, "descript": 5, "total_it": 5, "total": 5, "progress_logg": 5, "1000": [5, 9], "create_task": 5, "rang": [5, 11, 12, 24], "log_dict": [5, 12], "add": [5, 13, 15, 20, 21], "visibl": [5, 7, 9, 13], "advanc": [5, 14], "dictionari": [5, 6, 7, 9, 10, 11, 12, 13, 15, 20], "log_dir": 5, "kwarg": [5, 6, 7, 8, 9, 10, 12, 13], "tensorboard": [5, 12], "directori": [5, 10, 12, 15], "config_dict": 5, "write": [5, 11], "h": 5, "w": 5, "c": [5, 16], "caption": 5, "an": [5, 11, 13, 21, 24], "scalar": 5, "valu": [5, 8, 12, 13, 24], "torch": [5, 7, 9, 12, 13, 20, 24], "experiment_nam": 5, "project_nam": 5, "out": 5, "wandb": 5, "base_model": [6, 20, 24], "dictconfig": [6, 7, 8, 9, 13, 20], "arg": [6, 7, 8, 9, 24], "basemodul": [6, 8, 13], "lambda_dssim": [6, 8, 13, 20], "pass": [6, 13, 24], "input": [6, 8, 13, 14, 15, 24], "render_result": [6, 12, 13, 24], "contain": [6, 11, 13, 20, 24], "ground": [6, 13], "truth": [6, 13], "backpropag": [6, 13], "metric": [6, 13, 15, 20], "evalu": [6, 13, 15], "loss_dict": [6, 12, 13, 24], "white": [6, 7, 9, 13], "flag": [6, 13], "ply": [6, 8, 13], "map": [6, 11], "strict": 6, "assign": 6, "copi": 6, "buffer": 6, "modul": [6, 12, 13, 15, 20], "its": [6, 11, 14, 15], "descend": 6, "kei": [6, 11, 12, 13], "must": 6, "exactli": 6, "match": 6, "creat": [6, 11, 12, 13, 16], "persist": 6, "strictli": 6, "enforc": 6, "item": [6, 12, 13], "state": [6, 7, 13, 15], "correspond": 6, "instead": 6, "inplac": 6, "current": [6, 7, 14], "preserv": 6, "while": [6, 11], "missing_kei": 6, "miss": 6, "unexpected_kei": 6, "unexpect": 6, "namedtupl": 6, "regist": [6, 8, 12, 13, 14, 20, 21, 24], "exist": 6, "rais": [6, 12], "runtimeerror": 6, "baseobject": [7, 9], "learn": [7, 13, 19], "rate": [7, 13], "momentum": 7, "wrapper": 7, "you": [7, 11, 12, 13, 15, 16, 18, 19, 20, 21, 24], "backward": [7, 15, 24], "first": [7, 15, 16, 19, 20, 21, 24], "optimizer_dict": [7, 12, 24], "multipl": 7, "keyword": [7, 10, 12], "argument": [7, 10, 12], "gs_optim": 7, "control_modul": 7, "percent_dens": 7, "split_num": 7, "densify_stop_it": 7, "15000": 7, "densify_start_it": 7, "500": 7, "prune_interv": 7, "duplicate_interv": 7, "opacity_reset_interv": 7, "3000": [7, 24], "densify_grad_threshold": 7, "0002": 7, "min_opac": 7, "005": 7, "viewspace_point": [7, 13], "accumul": 7, "viewspac": [7, 9], "gradient": [7, 13, 14], "space": 7, "splat": 7, "also": [7, 11, 12, 13, 15, 18, 20], "densifi": 7, "gspointcloud": 7, "cameras_ext": 7, "grad": 7, "clone": [7, 13, 16], "mask": [7, 8, 13], "tupl": 7, "new": [7, 8, 11, 16, 24], "valid_points_mask": 7, "postprocess": 7, "opac": [7, 9, 13, 20, 24], "hyperparamet": 7, "radii": [7, 9, 13], "structur": [7, 13, 15, 19], "viewspace_grad": [7, 13], "schedul": [7, 10, 12, 15], "lr_scale": 7, "exponenti": [7, 11], "decai": 7, "init": [7, 11], "final": [7, 15, 16, 24], "delay_step": 7, "delay_mult": 7, "max_step": [7, 10, 12, 20, 21, 24], "1000000": 7, "delai": 7, "multipli": 7, "maximum": 7, "global_step": [7, 12, 13, 24], "optimizer_list": [7, 13], "global": [7, 13, 15, 24], "point_cloud_typ": [8, 20], "unwarp_prefix": [8, 20], "new_atribut": [8, 13], "extand": 8, "atribut": [8, 13], "extend": [8, 24], "new_tensor": 8, "attribut": [8, 13, 14], "remov": [8, 13], "num_point": 8, "re": 8, "pointscloud": [8, 13], "rgb": 8, "select": 8, "selected_atribut": 8, "set": [8, 11, 13, 15], "prefix": 8, "distinguish": 8, "differ": [8, 11], "up": [8, 13], "initialis": 8, "without": 8, "gaussian_point": [8, 20], "max_sh_degre": [8, 9, 13, 20], "dptr": [9, 14, 16], "update_sh_it": 9, "spheric": 9, "harmon": 9, "degre": 9, "render_dict": [9, 12, 20, 24], "filter": 9, "xyz": [9, 21, 24], "xy": 9, "sh": [9, 20, 21, 24], "scaling_modifi": 9, "render_xyz": 9, "one": [9, 11], "axi": 9, "engin": [10, 24], "default_train": [10, 24], "exp_dir": [10, 12, 24], "experi": [10, 12, 15], "dataset_nam": 10, "nerfdataset": 10, "30000": [10, 20, 21], "val_interv": [10, 12, 20, 21, 24], "2000": 10, "spatial_lr_scal": 10, "bar_upd_interv": 10, "10": 10, "fn_name": [10, 12], "method": [10, 12, 15], "model_path": [10, 24], "As": [11, 13], "shown": [11, 13, 15], "diagram": [11, 13], "below": [11, 15], "three": [11, 12], "respons": [11, 13], "e": [11, 12, 18], "convert": 11, "notic": 11, "introduc": 11, "emploi": 11, "own": [11, 13, 15, 19, 24], "thei": 11, "inherit": [11, 12, 13, 15, 20, 21, 24], "portion": 11, "For": [11, 12, 13], "instanc": [11, 12, 13], "have": [11, 12, 13, 18], "accomplish": [11, 12, 13], "your": [11, 13, 15, 19], "wai": [11, 13], "kind": 11, "support": [11, 12, 13, 14, 19, 21, 24], "access": [11, 12], "py": [11, 16, 18, 20, 21, 24], "process": [11, 13, 15], "conjunct": 11, "usual": 11, "do": [11, 13, 20, 21, 24], "overid": 11, "flow": [11, 14], "stabl": 11, "stream": 11, "two": [11, 12], "python": [11, 16, 18, 24], "content": 11, "And": [11, 12, 13, 20], "comput": [11, 13, 14], "construct": [11, 13, 15], "datapiplelin": 11, "build": [11, 12, 15], "associ": [11, 13], "To": [11, 21, 24], "specif": [11, 12, 13, 15], "tool": [11, 12], "respect": [11, 12], "immedi": 11, "latter": 11, "whole": 11, "life": 11, "cycl": 11, "wasn": 11, "random": [11, 21, 24], "time": [11, 12, 24], "same": 11, "implement": [11, 14, 15, 19, 21, 24], "want": [11, 12, 13, 15, 19, 20], "whenev": 11, "wa": 11, "overrod": 11, "baseformat": 11, "variabl": [11, 13], "data_list": 11, "def": [11, 12, 13, 20, 21, 24], "__init__": [11, 12, 20, 21, 24], "self": [11, 12, 13, 20, 21, 24], "abstractmethod": 11, "code": [11, 12, 13, 16, 24], "don": 11, "give": 11, "dataclass": [11, 13, 20], "overrid": [11, 12], "But": 11, "relat": [11, 13], "_transform_imag": 11, "__getitem__": 11, "_load_transform_imag": 11, "els": [11, 13, 24], "shape": [11, 13, 21, 24], "interfac": [11, 12, 13, 14], "framework": [11, 14, 15, 24], "creation": 11, "mean": 11, "chosen": 11, "yourself": [11, 21, 24], "found": 11, "It": [11, 13, 15], "At": [11, 15], "too": [11, 13], "store": 11, "pre": 11, "logarithm": 11, "represent": 11, "se": 11, "matric": 11, "log_transform": 11, "4x4": 11, "help": [11, 13, 24], "u": 11, "6d": 11, "repres": 11, "rigid": 11, "origin": [11, 18], "gpu": 11, "take": [12, 13, 24], "action": 12, "deriv": [12, 13], "reli": 12, "consol": 12, "termin": 12, "visual": 12, "record": [12, 14], "indic": [12, 13], "timepoint": 12, "bind": 12, "should": [12, 13], "encapsul": [12, 13], "util": 12, "summarywrit": 12, "those": 12, "yaml": [12, 18, 24], "conveni": [12, 13], "In": [12, 13, 15, 20, 24], "we": [12, 13, 20, 21, 24], "highlight": [12, 20, 21, 24], "super": [12, 13, 20, 21, 24], "start_step": 12, "parse_structur": [12, 20], "parse_hook": 12, "ignor": 12, "no_grad": [12, 13, 24], "val_dataset_s": [12, 24], "len": [12, 24], "validation_dataset": [12, 24], "metric_dict": [12, 24], "loop_rang": 12, "update_sh_degre": 12, "ad": 12, "addit": 12, "hasattr": 12, "try": 12, "getattr": [12, 13], "except": 12, "typeerror": 12, "f": 12, "defin": [12, 13, 15, 19], "someth": 12, "fulli": 12, "hook_registri": 12, "ema_loss_for_log": 12, "bar_info": 12, "losses_test": 12, "l1_loss": [12, 20], "psnr": 12, "ssim": 12, "lpip": 12, "pos_lr": 12, "lr": [12, 13, 24], "break": 12, "num_pt": [12, 21, 24], "6": 12, "7": 12, "optimizer_param": 12, "refer": [12, 13, 20, 21, 24], "tutori": [12, 13], "follow": [13, 15, 16, 18, 19], "divid": 13, "flexibl": 13, "organ": 13, "manag": [13, 14], "advantag": 13, "pytorch": [13, 16], "automat": 13, "differenti": [13, 19], "capabl": 13, "main": [13, 24], "goal": 13, "produc": 13, "system": 13, "definit": 13, "variou": [13, 14, 19], "combin": 13, "easili": [13, 14], "adjust": 13, "here": [13, 20, 21, 24], "composit": 13, "includ": [13, 15], "api": [13, 19], "more": [13, 19, 20, 24], "detail": [13, 20, 24], "littl": 13, "illustr": [13, 21, 24], "how": [13, 21, 24], "model_registri": [13, 20, 24], "parse_point_cloud": [13, 20], "person": 13, "so": [13, 21, 24], "just": [13, 15, 21, 24], "becaus": 13, "nn": [13, 20], "These": 13, "offer": [13, 19], "wish": 13, "depth": 13, "maintain": 13, "ha": [13, 19], "trinabl": 13, "register_buff": 13, "setattr": 13, "contigu": 13, "requires_grad_": 13, "append": 13, "further": 13, "featur": [13, 19], "feature_rest": 13, "activ": [13, 16], "funciton": 13, "scaling_activ": 13, "exp": 13, "scaling_inverse_activ": 13, "covariance_activ": 13, "build_covariance_from_scaling_rot": 13, "opacity_activ": 13, "sigmoid": 13, "inverse_opacity_activ": 13, "inverse_sigmoid": 13, "rotation_activ": 13, "rot": 13, "features_rest": 13, "gaussian_point_init": 13, "fused_color": 13, "unsqueez": [13, 24], "discuss": 13, "execut": [13, 15], "through": [13, 15], "descent": 13, "level": 13, "compar": 13, "propos": 13, "depict": 13, "abov": [13, 24], "zero_grad": 13, "set_to_non": 13, "piec": 13, "see": 13, "hyper": 13, "determin": 13, "goe": [13, 15], "clear": [13, 19], "modif": [13, 15, 20], "alreadi": 13, "extend_point": 13, "formal": 13, "Not": 13, "itself": 13, "similar": 13, "prune_tensor": 13, "prune_valu": 13, "optimizable_tensor": 13, "prefix_nam": 13, "unwarp_ground": 13, "stored_st": 13, "param": [13, 24], "exp_avg": 13, "exp_avg_sq": 13, "del": 13, "charg": 13, "scheduler_func": 13, "power": [14, 19], "extens": [14, 19], "built": 14, "around": 14, "core": 14, "like": 14, "rai": 14, "trace": 14, "maxim": 14, "open": 14, "allow": 14, "modular": [14, 19], "simplifi": 14, "research": [14, 19], "secondari": 14, "develop": 14, "much": 14, "possibl": 14, "mainstream": 14, "work": 14, "reformat": 14, "pars": [14, 15], "unifi": 14, "graph": 14, "techniqu": 14, "etc": [14, 15], "strive": 14, "gui": [14, 19], "interact": 14, "intermedi": 14, "entir": [14, 15], "workflow": 14, "complet": [15, 24], "well": 15, "relationship": 15, "between": 15, "mainli": 15, "phase": 15, "environ": [15, 16], "accord": 15, "interv": 15, "obtain": 15, "regular": 15, "perform": 15, "travers": 15, "save_model": [15, 24], "load_model": 15, "fuction": 15, "stage": 15, "propag": 15, "real": 15, "effect": 15, "our": [16, 21, 24], "conda": 16, "n": [16, 24], "9": 16, "Then": [16, 21, 24], "torchvis": 16, "16": 16, "12": 16, "nvidia": 16, "depend": 16, "pip": [16, 18], "txt": 16, "offici": 16, "diff": 16, "raster": 16, "github": 16, "git": 16, "http": [16, 18], "com": [16, 18], "recurs": 16, "cd": [16, 18], "knn": 16, "gitlab": 16, "inria": 16, "fr": 16, "bkerbl": 16, "download": 18, "put": 18, "folder": 18, "wget": 18, "cseweb": 18, "ucsd": 18, "edu": 18, "viscomp": 18, "lf": 18, "paper": 18, "eccv20": 18, "nerf_example_data": 18, "zip": 18, "command": [18, 24], "instal": [18, 19], "gaussian_splat": 18, "launch": [18, 24], "nerf_dptr": 18, "kernel": 18, "storag": 18, "googleapi": 18, "gresearch": 18, "refraw360": 18, "360_v2": 18, "colmap_dptr": 18, "iphon": 18, "drive": 18, "googl": 18, "1cbw3cuku2swqfc_1lbfzgbpdqytfzdex": 18, "deformable_gaussian": [18, 21, 24], "deform": [18, 24], "librari": 19, "highli": 19, "adopt": 19, "easi": 19, "rich": 19, "backend": 19, "serv": 19, "beginn": 19, "appli": 19, "about": [19, 24], "read": [19, 21, 24], "introduct": 19, "overal": 19, "datapiplin": 20, "get_opac": [20, 24], "get_scal": [20, 24], "get_rot": [20, 24], "get_sh": [20, 24], "ssim_loss": 20, "interest": 20, "look": 20, "forget": 20, "deformgaussian": [20, 24], "chang": [20, 21], "configui": [20, 21], "garden": [20, 21], "garden_fix": [20, 21], "5000": [20, 21, 24], "init_typ": 20, "inhert": [21, 24], "rewrit": [21, 24], "import": [21, 24], "registri": [21, 24], "data_format_registri": [21, 24], "common": [21, 24], "most": [21, 24], "case": [21, 24], "There": [21, 24], "nerfiesreformat": [21, 24], "implemet": [21, 24], "pleas": [21, 24], "cameras_result": [21, 24], "o": [21, 24], "join": [21, 24], "npy": [21, 24], "scene_cent": [21, 24], "coord_scal": [21, 24], "255": [21, 24], "pcd": [21, 24], "sh2rgb": [21, 24], "25": 21, "dynam": 24, "gaussaian": 24, "mlp": 24, "care": 24, "deformnetwork": 24, "is_blend": 24, "time_interv": 24, "smooth_term": 24, "get_linear_noise_func": 24, "lr_init": 24, "lr_final": 24, "1e": 24, "15": 24, "lr_delay_mult": 24, "20000": 24, "camera_fid": 24, "get_posit": 24, "time_input": 24, "expand": 24, "ast_nois": 24, "randn": 24, "d_xyz": 24, "d_rotat": 24, "d_scale": 24, "detach": 24, "find": 24, "extra": 24, "load_config": 24, "cli_arg": 24, "home": 24, "clz": 24, "dnerf": 24, "cat": 24, "optimizer_1": 24, "00016": 24, "5": 24, "gaussian_train": 24, "chkpnt": 24, "pth": 24, "ntrain": 24, "__name__": 24, "__main__": 24, "parser": 24, "argpars": 24, "argumentpars": 24, "add_argu": 24, "smc_file": 24, "parse_known_arg": 24}, "objects": {"pointrix.camera": [[1, 0, 0, "-", "camera"]], "pointrix.camera.camera": [[1, 1, 1, "", "Camera"], [1, 1, 1, "", "Cameras"], [1, 1, 1, "", "TrainableCamera"]], "pointrix.camera.camera.Camera": [[1, 2, 1, "", "camera_center"], [1, 2, 1, "", "extrinsic_matrix"], [1, 2, 1, "", "full_proj_transform"], [1, 3, 1, "", "getProjectionMatrix"], [1, 3, 1, "", "getWorld2View"], [1, 2, 1, "", "image_height"], [1, 2, 1, "", "image_width"], [1, 2, 1, "", "intrinsic_matrix"], [1, 3, 1, "", "load2device"], [1, 2, 1, "", "projection_matrix"], [1, 2, 1, "", "world_view_transform"]], "pointrix.camera.camera.Cameras": [[1, 3, 1, "", "circle"], [1, 3, 1, "", "dolly"], [1, 3, 1, "", "generate_camera_path"], [1, 3, 1, "", "get_translate_radius"], [1, 3, 1, "", "pose_to_cam"], [1, 3, 1, "", "spiral"], [1, 3, 1, "", "zoom"]], "pointrix.camera.camera.TrainableCamera": [[1, 2, 1, "", "full_proj_transform"], [1, 3, 1, "", "load2device"], [1, 2, 1, "", "param_groups"], [1, 2, 1, "", "world_view_transform"]], "pointrix.dataset": [[2, 0, 0, "-", "base_data"], [2, 0, 0, "-", "colmap_data"], [2, 0, 0, "-", "nerf_data"]], "pointrix.dataset.base_data": [[2, 1, 1, "", "BaseDataFormat"], [2, 1, 1, "", "BaseDataPipeline"], [2, 1, 1, "", "BaseImageDataset"], [2, 1, 1, "", "BaseReFormatData"], [2, 1, 1, "", "SimplePointCloud"]], "pointrix.dataset.base_data.BaseDataFormat": [[2, 4, 1, "", "Camera_list"], [2, 4, 1, "", "PointCloud"], [2, 4, 1, "", "image_filenames"], [2, 4, 1, "", "images"], [2, 4, 1, "", "metadata"]], "pointrix.dataset.base_data.BaseDataPipeline": [[2, 1, 1, "", "Config"], [2, 3, 1, "", "get_param_groups"], [2, 3, 1, "", "get_training_dataset"], [2, 3, 1, "", "get_validation_dataset"], [2, 3, 1, "", "loaddata"], [2, 3, 1, "", "next_train"], [2, 3, 1, "", "next_val"], [2, 2, 1, "", "training_dataset_size"], [2, 2, 1, "", "validation_dataset_size"]], "pointrix.dataset.base_data.BaseReFormatData": [[2, 3, 1, "", "load_all_images"], [2, 3, 1, "", "load_camera"], [2, 3, 1, "", "load_data_list"], [2, 3, 1, "", "load_image_filenames"], [2, 3, 1, "", "load_metadata"], [2, 3, 1, "", "load_pointcloud"]], "pointrix.dataset.colmap_data": [[2, 1, 1, "", "ColmapReFormat"]], "pointrix.dataset.colmap_data.ColmapReFormat": [[2, 3, 1, "", "load_camera"], [2, 3, 1, "", "load_image_filenames"], [2, 3, 1, "", "load_metadata"], [2, 3, 1, "", "load_pointcloud"]], "pointrix.dataset.nerf_data": [[2, 1, 1, "", "NerfReFormat"]], "pointrix.dataset.nerf_data.NerfReFormat": [[2, 3, 1, "", "load_camera"], [2, 3, 1, "", "load_image_filenames"], [2, 3, 1, "", "load_metadata"]], "pointrix.engine": [[10, 0, 0, "-", "default_trainer"]], "pointrix.engine.default_trainer": [[10, 1, 1, "", "DefaultTrainer"]], "pointrix.engine.default_trainer.DefaultTrainer": [[10, 1, 1, "", "Config"], [10, 3, 1, "", "call_hook"], [10, 3, 1, "", "test"], [10, 3, 1, "", "train_loop"], [10, 3, 1, "", "train_step"]], "pointrix.exporter": [[3, 0, 0, "-", "novel_view"]], "pointrix.exporter.novel_view": [[3, 5, 1, "", "novel_view_render"], [3, 5, 1, "", "test_view_render"]], "pointrix.hook": [[4, 0, 0, "-", "checkpoint_hook"], [4, 0, 0, "-", "hook"], [4, 0, 0, "-", "log_hook"]], "pointrix.hook.checkpoint_hook": [[4, 1, 1, "", "CheckPointHook"]], "pointrix.hook.checkpoint_hook.CheckPointHook": [[4, 3, 1, "", "after_train"], [4, 3, 1, "", "after_train_iter"]], "pointrix.hook.hook": [[4, 1, 1, "", "Hook"]], "pointrix.hook.hook.Hook": [[4, 3, 1, "", "after_load_checkpoint"], [4, 3, 1, "", "after_run"], [4, 3, 1, "", "after_train"], [4, 3, 1, "", "after_train_iter"], [4, 3, 1, "", "after_val"], [4, 3, 1, "", "after_val_iter"], [4, 3, 1, "", "before_run"], [4, 3, 1, "", "before_train"], [4, 3, 1, "", "before_train_iter"], [4, 3, 1, "", "before_val"], [4, 3, 1, "", "before_val_iter"]], "pointrix.hook.log_hook": [[4, 1, 1, "", "LogHook"]], "pointrix.hook.log_hook.LogHook": [[4, 3, 1, "", "after_train"], [4, 3, 1, "", "after_train_iter"], [4, 3, 1, "", "after_val"], [4, 3, 1, "", "after_val_iter"], [4, 3, 1, "", "before_run"], [4, 3, 1, "", "before_train"], [4, 3, 1, "", "before_val"]], "pointrix.logger": [[5, 0, 0, "-", "writer"]], "pointrix.logger.writer": [[5, 1, 1, "", "ItersPerSecColumn"], [5, 1, 1, "", "LogColumn"], [5, 1, 1, "", "ProgressLogger"], [5, 1, 1, "", "TensorboardWriter"], [5, 1, 1, "", "WandbWriter"], [5, 1, 1, "", "Writer"]], "pointrix.logger.writer.ItersPerSecColumn": [[5, 3, 1, "", "render"]], "pointrix.logger.writer.LogColumn": [[5, 3, 1, "", "render"]], "pointrix.logger.writer.ProgressLogger": [[5, 3, 1, "", "add_task"], [5, 3, 1, "", "reset"], [5, 3, 1, "", "start"], [5, 3, 1, "", "start_task"], [5, 3, 1, "", "stop"], [5, 3, 1, "", "stop_task"], [5, 3, 1, "", "update"]], "pointrix.logger.writer.TensorboardWriter": [[5, 3, 1, "", "write_config"], [5, 3, 1, "", "write_image"], [5, 3, 1, "", "write_scalar"]], "pointrix.logger.writer.WandbWriter": [[5, 3, 1, "", "write_config"], [5, 3, 1, "", "write_image"], [5, 3, 1, "", "write_scalar"]], "pointrix.logger.writer.Writer": [[5, 3, 1, "", "write_config"], [5, 3, 1, "", "write_image"], [5, 3, 1, "", "write_scalar"]], "pointrix.model": [[6, 0, 0, "-", "base_model"]], "pointrix.model.base_model": [[6, 1, 1, "", "BaseModel"]], "pointrix.model.base_model.BaseModel": [[6, 1, 1, "", "Config"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "get_loss_dict"], [6, 3, 1, "", "get_metric_dict"], [6, 3, 1, "", "get_optimizer_dict"], [6, 3, 1, "", "load_ply"], [6, 3, 1, "", "load_state_dict"]], "pointrix.model.gaussian_points": [[8, 0, 0, "-", "gaussian_points"]], "pointrix.model.gaussian_points.gaussian_points": [[8, 1, 1, "", "GaussianPointCloud"]], "pointrix.model.gaussian_points.gaussian_points.GaussianPointCloud": [[8, 1, 1, "", "Config"], [8, 3, 1, "", "re_init"], [8, 3, 1, "", "setup"]], "pointrix.optimizer": [[7, 0, 0, "-", "gs_optimizer"], [7, 0, 0, "-", "optimizer"], [7, 0, 0, "-", "scheduler"]], "pointrix.optimizer.gs_optimizer": [[7, 1, 1, "", "GaussianSplattingOptimizer"]], "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer": [[7, 1, 1, "", "Config"], [7, 3, 1, "", "accumulate_viewspace_grad"], [7, 4, 1, "", "cfg"], [7, 3, 1, "", "densification"], [7, 3, 1, "", "densify_clone"], [7, 3, 1, "", "densify_split"], [7, 3, 1, "", "generate_clone_mask"], [7, 3, 1, "", "generate_split_mask"], [7, 3, 1, "", "new_pos_scale"], [7, 3, 1, "", "prune"], [7, 3, 1, "", "prune_postprocess"], [7, 3, 1, "", "reset_densification_state"], [7, 3, 1, "", "reset_opacity"], [7, 3, 1, "", "update_hypers"], [7, 3, 1, "", "update_model"], [7, 3, 1, "", "update_structure"]], "pointrix.optimizer.optimizer": [[7, 1, 1, "", "BaseOptimizer"], [7, 1, 1, "", "OptimizerList"]], "pointrix.optimizer.optimizer.BaseOptimizer": [[7, 3, 1, "", "get_lr"], [7, 3, 1, "", "get_momentum"], [7, 3, 1, "", "load_state_dict"], [7, 2, 1, "", "param_groups"], [7, 3, 1, "", "state_dict"], [7, 3, 1, "", "update_model"]], "pointrix.optimizer.optimizer.OptimizerList": [[7, 3, 1, "", "load_state_dict"], [7, 2, 1, "", "param_groups"], [7, 3, 1, "", "state_dict"], [7, 3, 1, "", "update_model"]], "pointrix.optimizer.scheduler": [[7, 1, 1, "", "ExponLRScheduler"]], "pointrix.optimizer.scheduler.ExponLRScheduler": [[7, 3, 1, "", "get_expon_lr_func"], [7, 3, 1, "", "step"]], "pointrix.point_cloud": [[8, 0, 0, "-", "points"]], "pointrix.point_cloud.points": [[8, 1, 1, "", "PointCloud"]], "pointrix.point_cloud.points.PointCloud": [[8, 1, 1, "", "Config"], [8, 3, 1, "", "extand_points"], [8, 3, 1, "", "extend_optimizer"], [8, 3, 1, "", "get_all_atributes"], [8, 3, 1, "", "list_of_attributes"], [8, 3, 1, "", "load_ply"], [8, 3, 1, "", "prune_optimizer"], [8, 3, 1, "", "re_init"], [8, 3, 1, "", "register_atribute"], [8, 3, 1, "", "remove_points"], [8, 3, 1, "", "replace"], [8, 3, 1, "", "replace_optimizer"], [8, 3, 1, "", "save_ply"], [8, 3, 1, "", "select_atributes"], [8, 3, 1, "", "set_all_atributes_trainable"], [8, 3, 1, "", "set_prefix_name"], [8, 3, 1, "", "setup"], [8, 3, 1, "", "unwarp"]], "pointrix.renderer": [[9, 0, 0, "-", "base_splatting"], [9, 0, 0, "-", "dptr"]], "pointrix.renderer.dptr": [[9, 1, 1, "", "DPTRRender"]], "pointrix.renderer.dptr.DPTRRender": [[9, 1, 1, "", "Config"], [9, 3, 1, "", "render_batch"], [9, 3, 1, "", "render_iter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "camera": [1, 11], "basic": 1, "trainabl": 1, "dataset": [2, 11, 18, 21, 24], "base": [2, 8, 13], "nerf": [2, 18], "colmap": [2, 18], "export": 3, "render": [3, 9, 17], "novel": [3, 17], "view": [3, 17], "hook": [4, 12], "logger": 5, "model": [6, 13, 14, 18, 20, 24], "optim": [7, 13], "point_cloud": 8, "point": [8, 13], "cloud": [8, 13], "gaussian": [8, 18], "trainer": [10, 15, 22, 24], "datapipelin": 11, "The": 11, "procedur": 11, "data": [11, 14, 15], "read": 11, "detail": 11, "each": 11, "part": 11, "reformatdata": 11, "dataformat": 11, "trainablecamera": 11, "where": 12, "us": [12, 17], "more": 12, "type": 12, "pointcloud": 13, "gaussianpointcloud": 13, "baseoptim": 13, "gaussiansplattingoptim": 13, "schedul": 13, "overal": 14, "compon": 14, "log": 14, "visual": 14, "configur": [14, 23], "registr": 14, "callback": 14, "defaulttrain": 15, "flow": 15, "instal": 16, "1": [16, 18], "packag": 16, "gui": 17, "run": [18, 24], "your": [18, 20, 21, 22, 24], "first": 18, "lego": 18, "2": 18, "mip": 18, "360": 18, "other": 18, "3": 18, "dynam": 18, "sphinx": 19, "design": 19, "overview": 19, "get": 19, "start": 19, "tutori": [19, 24], "framework": 19, "refer": 19, "contributor": 19, "pointrix": [19, 23, 24], "dptr": 19, "defin": [20, 21, 22], "own": [20, 21, 22], "learn": 23, "add": 24, "modifi": 24}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"API": [[0, "api"]], "camera": [[1, "camera"]], "basic and trainable camera": [[1, "module-pointrix.camera.camera"]], "dataset": [[2, "dataset"]], "Base dataset": [[2, "module-pointrix.dataset.base_data"]], "Nerf dataset": [[2, "module-pointrix.dataset.nerf_data"]], "Colmap dataset": [[2, "module-pointrix.dataset.colmap_data"]], "exporter": [[3, "exporter"]], "Render the novel view.": [[3, "module-pointrix.exporter.novel_view"]], "hook": [[4, "module-pointrix.hook.hook"]], "logger": [[5, "module-pointrix.logger.writer"]], "model": [[6, "module-pointrix.model.base_model"]], "optimizer": [[7, "module-pointrix.optimizer.optimizer"]], "point_cloud": [[8, "point-cloud"]], "Base point cloud": [[8, "module-pointrix.point_cloud.points"]], "Gaussian point cloud": [[8, "module-pointrix.model.gaussian_points.gaussian_points"]], "renderer": [[9, "module-pointrix.renderer.base_splatting"]], "trainer": [[10, "module-pointrix.engine.default_trainer"]], "Datapipeline": [[11, "datapipeline"]], "The Procedure of the Data Read": [[11, "the-procedure-of-the-data-read"]], "The Detail of Each Part": [[11, "the-detail-of-each-part"]], "ReformatData": [[11, "reformatdata"]], "DataFormat": [[11, "dataformat"]], "Dataset": [[11, "dataset"]], "DataPipeline": [[11, "id1"]], "Camera": [[11, "camera"], [11, "id2"]], "TrainableCamera": [[11, "trainablecamera"]], "Cameras": [[11, "cameras"]], "Hook": [[12, "hook"]], "Where to use": [[12, "where-to-use"]], "More Types of Hook": [[12, "more-types-of-hook"]], "Model": [[13, "model"]], "Base model": [[13, "base-model"]], "Point Cloud": [[13, "point-cloud"]], "PointCloud": [[13, "pointcloud"]], "GaussianPointCloud": [[13, "gaussianpointcloud"]], "Optimizer": [[13, "optimizer"]], "BaseOptimizer": [[13, "baseoptimizer"]], "GaussianSplattingOptimizer": [[13, "gaussiansplattingoptimizer"]], "Scheduler": [[13, "scheduler"]], "Overall": [[14, "overall"]], "Data Components": [[14, "data-components"]], "Model Components": [[14, "model-components"]], "Logging, Visualization, Configuration, Registration, and Callback Components": [[14, "logging-visualization-configuration-registration-and-callback-components"]], "Trainer": [[15, "trainer"]], "DefaultTrainer": [[15, "defaulttrainer"]], "Data Flow": [[15, "data-flow"]], "Installation": [[16, "installation"]], "1. Install package": [[16, "install-package"]], "Using GUI and render novel view": [[17, "using-gui-and-render-novel-view"]], "Run your first model": [[18, "run-your-first-model"]], "1. Lego": [[18, "lego"]], "2. Mip-nerf 360 or other colmap dataset": [[18, "mip-nerf-360-or-other-colmap-dataset"]], "3. Dynamic Gaussian": [[18, "dynamic-gaussian"]], "sphinx-design": [[19, "sphinx-design"]], "Overview": [[19, "overview"]], "Get started": [[19, null]], "tutorial": [[19, null]], "Framework": [[19, null]], "Reference": [[19, null]], "Contributors:": [[19, "contributors"]], "Pointrix:": [[19, "pointrix"]], "DPTR:": [[19, "dptr"]], "Define your own model": [[20, "define-your-own-model"]], "Define your own dataset": [[21, "define-your-own-dataset"]], "Define your own trainer": [[22, "define-your-own-trainer"]], "Learning the configuration in Pointrix": [[23, "learning-the-configuration-in-pointrix"]], "Tutorial": [[24, "tutorial"]], "Add your model": [[24, "add-your-model"]], "Add your dataset": [[24, "add-your-dataset"]], "Modify Trainer": [[24, "modify-trainer"]], "Run pointrix": [[24, "run-pointrix"]]}, "indexentries": {"camera (class in pointrix.camera.camera)": [[1, "pointrix.camera.camera.Camera"]], "cameras (class in pointrix.camera.camera)": [[1, "pointrix.camera.camera.Cameras"]], "trainablecamera (class in pointrix.camera.camera)": [[1, "pointrix.camera.camera.TrainableCamera"]], "camera_center (pointrix.camera.camera.camera property)": [[1, "pointrix.camera.camera.Camera.camera_center"]], "circle() (pointrix.camera.camera.cameras method)": [[1, "pointrix.camera.camera.Cameras.circle"]], "dolly() (pointrix.camera.camera.cameras method)": [[1, "pointrix.camera.camera.Cameras.dolly"]], "extrinsic_matrix (pointrix.camera.camera.camera property)": [[1, "pointrix.camera.camera.Camera.extrinsic_matrix"]], "full_proj_transform (pointrix.camera.camera.camera property)": [[1, "pointrix.camera.camera.Camera.full_proj_transform"]], "full_proj_transform (pointrix.camera.camera.trainablecamera property)": [[1, "pointrix.camera.camera.TrainableCamera.full_proj_transform"]], "generate_camera_path() (pointrix.camera.camera.cameras method)": [[1, "pointrix.camera.camera.Cameras.generate_camera_path"]], "getprojectionmatrix() (pointrix.camera.camera.camera static method)": [[1, "pointrix.camera.camera.Camera.getProjectionMatrix"]], "getworld2view() (pointrix.camera.camera.camera static method)": [[1, "pointrix.camera.camera.Camera.getWorld2View"]], "get_translate_radius() (pointrix.camera.camera.cameras method)": [[1, "pointrix.camera.camera.Cameras.get_translate_radius"]], "image_height (pointrix.camera.camera.camera property)": [[1, "pointrix.camera.camera.Camera.image_height"]], "image_width (pointrix.camera.camera.camera property)": [[1, "pointrix.camera.camera.Camera.image_width"]], "intrinsic_matrix (pointrix.camera.camera.camera property)": [[1, "pointrix.camera.camera.Camera.intrinsic_matrix"]], "load2device() (pointrix.camera.camera.camera method)": [[1, "pointrix.camera.camera.Camera.load2device"]], "load2device() (pointrix.camera.camera.trainablecamera method)": [[1, "pointrix.camera.camera.TrainableCamera.load2device"]], "module": [[1, "module-pointrix.camera.camera"], [2, "module-pointrix.dataset.base_data"], [2, "module-pointrix.dataset.colmap_data"], [2, "module-pointrix.dataset.nerf_data"], [3, "module-pointrix.exporter.novel_view"], [4, "module-pointrix.hook.checkpoint_hook"], [4, "module-pointrix.hook.hook"], [4, "module-pointrix.hook.log_hook"], [5, "module-pointrix.logger.writer"], [6, "module-pointrix.model.base_model"], [7, "module-pointrix.optimizer.gs_optimizer"], [7, "module-pointrix.optimizer.optimizer"], [7, "module-pointrix.optimizer.scheduler"], [8, "module-pointrix.model.gaussian_points.gaussian_points"], [8, "module-pointrix.point_cloud.points"], [9, "module-pointrix.renderer.base_splatting"], [9, "module-pointrix.renderer.dptr"], [10, "module-pointrix.engine.default_trainer"]], "param_groups (pointrix.camera.camera.trainablecamera property)": [[1, "pointrix.camera.camera.TrainableCamera.param_groups"]], "pointrix.camera.camera": [[1, "module-pointrix.camera.camera"]], "pose_to_cam() (pointrix.camera.camera.cameras method)": [[1, "pointrix.camera.camera.Cameras.pose_to_cam"]], "projection_matrix (pointrix.camera.camera.camera property)": [[1, "pointrix.camera.camera.Camera.projection_matrix"]], "spiral() (pointrix.camera.camera.cameras method)": [[1, "pointrix.camera.camera.Cameras.spiral"]], "world_view_transform (pointrix.camera.camera.camera property)": [[1, "pointrix.camera.camera.Camera.world_view_transform"]], "world_view_transform (pointrix.camera.camera.trainablecamera property)": [[1, "pointrix.camera.camera.TrainableCamera.world_view_transform"]], "zoom() (pointrix.camera.camera.cameras method)": [[1, "pointrix.camera.camera.Cameras.zoom"]], "basedataformat (class in pointrix.dataset.base_data)": [[2, "pointrix.dataset.base_data.BaseDataFormat"]], "basedatapipeline (class in pointrix.dataset.base_data)": [[2, "pointrix.dataset.base_data.BaseDataPipeline"]], "basedatapipeline.config (class in pointrix.dataset.base_data)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.Config"]], "baseimagedataset (class in pointrix.dataset.base_data)": [[2, "pointrix.dataset.base_data.BaseImageDataset"]], "basereformatdata (class in pointrix.dataset.base_data)": [[2, "pointrix.dataset.base_data.BaseReFormatData"]], "camera_list (pointrix.dataset.base_data.basedataformat attribute)": [[2, "pointrix.dataset.base_data.BaseDataFormat.Camera_list"]], "colmapreformat (class in pointrix.dataset.colmap_data)": [[2, "pointrix.dataset.colmap_data.ColmapReFormat"]], "nerfreformat (class in pointrix.dataset.nerf_data)": [[2, "pointrix.dataset.nerf_data.NerfReFormat"]], "pointcloud (pointrix.dataset.base_data.basedataformat attribute)": [[2, "pointrix.dataset.base_data.BaseDataFormat.PointCloud"]], "simplepointcloud (class in pointrix.dataset.base_data)": [[2, "pointrix.dataset.base_data.SimplePointCloud"]], "get_param_groups() (pointrix.dataset.base_data.basedatapipeline method)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.get_param_groups"]], "get_training_dataset() (pointrix.dataset.base_data.basedatapipeline method)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.get_training_dataset"]], "get_validation_dataset() (pointrix.dataset.base_data.basedatapipeline method)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.get_validation_dataset"]], "image_filenames (pointrix.dataset.base_data.basedataformat attribute)": [[2, "pointrix.dataset.base_data.BaseDataFormat.image_filenames"]], "images (pointrix.dataset.base_data.basedataformat attribute)": [[2, "pointrix.dataset.base_data.BaseDataFormat.images"]], "load_all_images() (pointrix.dataset.base_data.basereformatdata method)": [[2, "pointrix.dataset.base_data.BaseReFormatData.load_all_images"]], "load_camera() (pointrix.dataset.base_data.basereformatdata method)": [[2, "pointrix.dataset.base_data.BaseReFormatData.load_camera"]], "load_camera() (pointrix.dataset.colmap_data.colmapreformat method)": [[2, "pointrix.dataset.colmap_data.ColmapReFormat.load_camera"]], "load_camera() (pointrix.dataset.nerf_data.nerfreformat method)": [[2, "pointrix.dataset.nerf_data.NerfReFormat.load_camera"]], "load_data_list() (pointrix.dataset.base_data.basereformatdata method)": [[2, "pointrix.dataset.base_data.BaseReFormatData.load_data_list"]], "load_image_filenames() (pointrix.dataset.base_data.basereformatdata method)": [[2, "pointrix.dataset.base_data.BaseReFormatData.load_image_filenames"]], "load_image_filenames() (pointrix.dataset.colmap_data.colmapreformat method)": [[2, "pointrix.dataset.colmap_data.ColmapReFormat.load_image_filenames"]], "load_image_filenames() (pointrix.dataset.nerf_data.nerfreformat method)": [[2, "pointrix.dataset.nerf_data.NerfReFormat.load_image_filenames"]], "load_metadata() (pointrix.dataset.base_data.basereformatdata method)": [[2, "pointrix.dataset.base_data.BaseReFormatData.load_metadata"]], "load_metadata() (pointrix.dataset.colmap_data.colmapreformat method)": [[2, "pointrix.dataset.colmap_data.ColmapReFormat.load_metadata"]], "load_metadata() (pointrix.dataset.nerf_data.nerfreformat method)": [[2, "pointrix.dataset.nerf_data.NerfReFormat.load_metadata"]], "load_pointcloud() (pointrix.dataset.base_data.basereformatdata method)": [[2, "pointrix.dataset.base_data.BaseReFormatData.load_pointcloud"]], "load_pointcloud() (pointrix.dataset.colmap_data.colmapreformat method)": [[2, "pointrix.dataset.colmap_data.ColmapReFormat.load_pointcloud"]], "loaddata() (pointrix.dataset.base_data.basedatapipeline method)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.loaddata"]], "metadata (pointrix.dataset.base_data.basedataformat attribute)": [[2, "pointrix.dataset.base_data.BaseDataFormat.metadata"]], "next_train() (pointrix.dataset.base_data.basedatapipeline method)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.next_train"]], "next_val() (pointrix.dataset.base_data.basedatapipeline method)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.next_val"]], "pointrix.dataset.base_data": [[2, "module-pointrix.dataset.base_data"]], "pointrix.dataset.colmap_data": [[2, "module-pointrix.dataset.colmap_data"]], "pointrix.dataset.nerf_data": [[2, "module-pointrix.dataset.nerf_data"]], "training_dataset_size (pointrix.dataset.base_data.basedatapipeline property)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.training_dataset_size"]], "validation_dataset_size (pointrix.dataset.base_data.basedatapipeline property)": [[2, "pointrix.dataset.base_data.BaseDataPipeline.validation_dataset_size"]], "novel_view_render() (in module pointrix.exporter.novel_view)": [[3, "pointrix.exporter.novel_view.novel_view_render"]], "pointrix.exporter.novel_view": [[3, "module-pointrix.exporter.novel_view"]], "test_view_render() (in module pointrix.exporter.novel_view)": [[3, "pointrix.exporter.novel_view.test_view_render"]], "checkpointhook (class in pointrix.hook.checkpoint_hook)": [[4, "pointrix.hook.checkpoint_hook.CheckPointHook"]], "hook (class in pointrix.hook.hook)": [[4, "pointrix.hook.hook.Hook"]], "loghook (class in pointrix.hook.log_hook)": [[4, "pointrix.hook.log_hook.LogHook"]], "after_load_checkpoint() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.after_load_checkpoint"]], "after_run() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.after_run"]], "after_train() (pointrix.hook.checkpoint_hook.checkpointhook method)": [[4, "pointrix.hook.checkpoint_hook.CheckPointHook.after_train"]], "after_train() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.after_train"]], "after_train() (pointrix.hook.log_hook.loghook method)": [[4, "pointrix.hook.log_hook.LogHook.after_train"]], "after_train_iter() (pointrix.hook.checkpoint_hook.checkpointhook method)": [[4, "pointrix.hook.checkpoint_hook.CheckPointHook.after_train_iter"]], "after_train_iter() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.after_train_iter"]], "after_train_iter() (pointrix.hook.log_hook.loghook method)": [[4, "pointrix.hook.log_hook.LogHook.after_train_iter"]], "after_val() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.after_val"]], "after_val() (pointrix.hook.log_hook.loghook method)": [[4, "pointrix.hook.log_hook.LogHook.after_val"]], "after_val_iter() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.after_val_iter"]], "after_val_iter() (pointrix.hook.log_hook.loghook method)": [[4, "pointrix.hook.log_hook.LogHook.after_val_iter"]], "before_run() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.before_run"]], "before_run() (pointrix.hook.log_hook.loghook method)": [[4, "pointrix.hook.log_hook.LogHook.before_run"]], "before_train() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.before_train"]], "before_train() (pointrix.hook.log_hook.loghook method)": [[4, "pointrix.hook.log_hook.LogHook.before_train"]], "before_train_iter() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.before_train_iter"]], "before_val() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.before_val"]], "before_val() (pointrix.hook.log_hook.loghook method)": [[4, "pointrix.hook.log_hook.LogHook.before_val"]], "before_val_iter() (pointrix.hook.hook.hook method)": [[4, "pointrix.hook.hook.Hook.before_val_iter"]], "pointrix.hook.checkpoint_hook": [[4, "module-pointrix.hook.checkpoint_hook"]], "pointrix.hook.hook": [[4, "module-pointrix.hook.hook"]], "pointrix.hook.log_hook": [[4, "module-pointrix.hook.log_hook"]], "itersperseccolumn (class in pointrix.logger.writer)": [[5, "pointrix.logger.writer.ItersPerSecColumn"]], "logcolumn (class in pointrix.logger.writer)": [[5, "pointrix.logger.writer.LogColumn"]], "progresslogger (class in pointrix.logger.writer)": [[5, "pointrix.logger.writer.ProgressLogger"]], "tensorboardwriter (class in pointrix.logger.writer)": [[5, "pointrix.logger.writer.TensorboardWriter"]], "wandbwriter (class in pointrix.logger.writer)": [[5, "pointrix.logger.writer.WandbWriter"]], "writer (class in pointrix.logger.writer)": [[5, "pointrix.logger.writer.Writer"]], "add_task() (pointrix.logger.writer.progresslogger method)": [[5, "pointrix.logger.writer.ProgressLogger.add_task"]], "pointrix.logger.writer": [[5, "module-pointrix.logger.writer"]], "render() (pointrix.logger.writer.itersperseccolumn method)": [[5, "pointrix.logger.writer.ItersPerSecColumn.render"]], "render() (pointrix.logger.writer.logcolumn method)": [[5, "pointrix.logger.writer.LogColumn.render"]], "reset() (pointrix.logger.writer.progresslogger method)": [[5, "pointrix.logger.writer.ProgressLogger.reset"]], "start() (pointrix.logger.writer.progresslogger method)": [[5, "pointrix.logger.writer.ProgressLogger.start"]], "start_task() (pointrix.logger.writer.progresslogger method)": [[5, "pointrix.logger.writer.ProgressLogger.start_task"]], "stop() (pointrix.logger.writer.progresslogger method)": [[5, "pointrix.logger.writer.ProgressLogger.stop"]], "stop_task() (pointrix.logger.writer.progresslogger method)": [[5, "pointrix.logger.writer.ProgressLogger.stop_task"]], "update() (pointrix.logger.writer.progresslogger method)": [[5, "pointrix.logger.writer.ProgressLogger.update"]], "write_config() (pointrix.logger.writer.tensorboardwriter method)": [[5, "pointrix.logger.writer.TensorboardWriter.write_config"]], "write_config() (pointrix.logger.writer.wandbwriter method)": [[5, "pointrix.logger.writer.WandbWriter.write_config"]], "write_config() (pointrix.logger.writer.writer method)": [[5, "pointrix.logger.writer.Writer.write_config"]], "write_image() (pointrix.logger.writer.tensorboardwriter method)": [[5, "pointrix.logger.writer.TensorboardWriter.write_image"]], "write_image() (pointrix.logger.writer.wandbwriter method)": [[5, "pointrix.logger.writer.WandbWriter.write_image"]], "write_image() (pointrix.logger.writer.writer method)": [[5, "pointrix.logger.writer.Writer.write_image"]], "write_scalar() (pointrix.logger.writer.tensorboardwriter method)": [[5, "pointrix.logger.writer.TensorboardWriter.write_scalar"]], "write_scalar() (pointrix.logger.writer.wandbwriter method)": [[5, "pointrix.logger.writer.WandbWriter.write_scalar"]], "write_scalar() (pointrix.logger.writer.writer method)": [[5, "pointrix.logger.writer.Writer.write_scalar"]], "basemodel (class in pointrix.model.base_model)": [[6, "pointrix.model.base_model.BaseModel"]], "basemodel.config (class in pointrix.model.base_model)": [[6, "pointrix.model.base_model.BaseModel.Config"]], "forward() (pointrix.model.base_model.basemodel method)": [[6, "pointrix.model.base_model.BaseModel.forward"]], "get_loss_dict() (pointrix.model.base_model.basemodel method)": [[6, "pointrix.model.base_model.BaseModel.get_loss_dict"]], "get_metric_dict() (pointrix.model.base_model.basemodel method)": [[6, "pointrix.model.base_model.BaseModel.get_metric_dict"]], "get_optimizer_dict() (pointrix.model.base_model.basemodel method)": [[6, "pointrix.model.base_model.BaseModel.get_optimizer_dict"]], "load_ply() (pointrix.model.base_model.basemodel method)": [[6, "pointrix.model.base_model.BaseModel.load_ply"]], "load_state_dict() (pointrix.model.base_model.basemodel method)": [[6, "pointrix.model.base_model.BaseModel.load_state_dict"]], "pointrix.model.base_model": [[6, "module-pointrix.model.base_model"]], "baseoptimizer (class in pointrix.optimizer.optimizer)": [[7, "pointrix.optimizer.optimizer.BaseOptimizer"]], "exponlrscheduler (class in pointrix.optimizer.scheduler)": [[7, "pointrix.optimizer.scheduler.ExponLRScheduler"]], "gaussiansplattingoptimizer (class in pointrix.optimizer.gs_optimizer)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer"]], "gaussiansplattingoptimizer.config (class in pointrix.optimizer.gs_optimizer)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.Config"]], "optimizerlist (class in pointrix.optimizer.optimizer)": [[7, "pointrix.optimizer.optimizer.OptimizerList"]], "accumulate_viewspace_grad() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.accumulate_viewspace_grad"]], "cfg (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer attribute)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.cfg"]], "densification() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.densification"]], "densify_clone() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.densify_clone"]], "densify_split() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.densify_split"]], "generate_clone_mask() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.generate_clone_mask"]], "generate_split_mask() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.generate_split_mask"]], "get_expon_lr_func() (pointrix.optimizer.scheduler.exponlrscheduler method)": [[7, "pointrix.optimizer.scheduler.ExponLRScheduler.get_expon_lr_func"]], "get_lr() (pointrix.optimizer.optimizer.baseoptimizer method)": [[7, "pointrix.optimizer.optimizer.BaseOptimizer.get_lr"]], "get_momentum() (pointrix.optimizer.optimizer.baseoptimizer method)": [[7, "pointrix.optimizer.optimizer.BaseOptimizer.get_momentum"]], "load_state_dict() (pointrix.optimizer.optimizer.baseoptimizer method)": [[7, "pointrix.optimizer.optimizer.BaseOptimizer.load_state_dict"]], "load_state_dict() (pointrix.optimizer.optimizer.optimizerlist method)": [[7, "pointrix.optimizer.optimizer.OptimizerList.load_state_dict"]], "new_pos_scale() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.new_pos_scale"]], "param_groups (pointrix.optimizer.optimizer.baseoptimizer property)": [[7, "pointrix.optimizer.optimizer.BaseOptimizer.param_groups"]], "param_groups (pointrix.optimizer.optimizer.optimizerlist property)": [[7, "pointrix.optimizer.optimizer.OptimizerList.param_groups"]], "pointrix.optimizer.gs_optimizer": [[7, "module-pointrix.optimizer.gs_optimizer"]], "pointrix.optimizer.optimizer": [[7, "module-pointrix.optimizer.optimizer"]], "pointrix.optimizer.scheduler": [[7, "module-pointrix.optimizer.scheduler"]], "prune() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.prune"]], "prune_postprocess() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.prune_postprocess"]], "reset_densification_state() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.reset_densification_state"]], "reset_opacity() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.reset_opacity"]], "state_dict() (pointrix.optimizer.optimizer.baseoptimizer method)": [[7, "pointrix.optimizer.optimizer.BaseOptimizer.state_dict"]], "state_dict() (pointrix.optimizer.optimizer.optimizerlist method)": [[7, "pointrix.optimizer.optimizer.OptimizerList.state_dict"]], "step() (pointrix.optimizer.scheduler.exponlrscheduler method)": [[7, "pointrix.optimizer.scheduler.ExponLRScheduler.step"]], "update_hypers() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.update_hypers"]], "update_model() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.update_model"]], "update_model() (pointrix.optimizer.optimizer.baseoptimizer method)": [[7, "pointrix.optimizer.optimizer.BaseOptimizer.update_model"]], "update_model() (pointrix.optimizer.optimizer.optimizerlist method)": [[7, "pointrix.optimizer.optimizer.OptimizerList.update_model"]], "update_structure() (pointrix.optimizer.gs_optimizer.gaussiansplattingoptimizer method)": [[7, "pointrix.optimizer.gs_optimizer.GaussianSplattingOptimizer.update_structure"]], "gaussianpointcloud (class in pointrix.model.gaussian_points.gaussian_points)": [[8, "pointrix.model.gaussian_points.gaussian_points.GaussianPointCloud"]], "gaussianpointcloud.config (class in pointrix.model.gaussian_points.gaussian_points)": [[8, "pointrix.model.gaussian_points.gaussian_points.GaussianPointCloud.Config"]], "pointcloud (class in pointrix.point_cloud.points)": [[8, "pointrix.point_cloud.points.PointCloud"]], "pointcloud.config (class in pointrix.point_cloud.points)": [[8, "pointrix.point_cloud.points.PointCloud.Config"]], "extand_points() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.extand_points"]], "extend_optimizer() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.extend_optimizer"]], "get_all_atributes() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.get_all_atributes"]], "list_of_attributes() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.list_of_attributes"]], "load_ply() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.load_ply"]], "pointrix.model.gaussian_points.gaussian_points": [[8, "module-pointrix.model.gaussian_points.gaussian_points"]], "pointrix.point_cloud.points": [[8, "module-pointrix.point_cloud.points"]], "prune_optimizer() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.prune_optimizer"]], "re_init() (pointrix.model.gaussian_points.gaussian_points.gaussianpointcloud method)": [[8, "pointrix.model.gaussian_points.gaussian_points.GaussianPointCloud.re_init"]], "re_init() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.re_init"]], "register_atribute() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.register_atribute"]], "remove_points() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.remove_points"]], "replace() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.replace"]], "replace_optimizer() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.replace_optimizer"]], "save_ply() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.save_ply"]], "select_atributes() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.select_atributes"]], "set_all_atributes_trainable() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.set_all_atributes_trainable"]], "set_prefix_name() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.set_prefix_name"]], "setup() (pointrix.model.gaussian_points.gaussian_points.gaussianpointcloud method)": [[8, "pointrix.model.gaussian_points.gaussian_points.GaussianPointCloud.setup"]], "setup() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.setup"]], "unwarp() (pointrix.point_cloud.points.pointcloud method)": [[8, "pointrix.point_cloud.points.PointCloud.unwarp"]], "dptrrender (class in pointrix.renderer.dptr)": [[9, "pointrix.renderer.dptr.DPTRRender"]], "dptrrender.config (class in pointrix.renderer.dptr)": [[9, "pointrix.renderer.dptr.DPTRRender.Config"]], "pointrix.renderer.base_splatting": [[9, "module-pointrix.renderer.base_splatting"]], "pointrix.renderer.dptr": [[9, "module-pointrix.renderer.dptr"]], "render_batch() (pointrix.renderer.dptr.dptrrender method)": [[9, "pointrix.renderer.dptr.DPTRRender.render_batch"]], "render_iter() (pointrix.renderer.dptr.dptrrender method)": [[9, "pointrix.renderer.dptr.DPTRRender.render_iter"]], "defaulttrainer (class in pointrix.engine.default_trainer)": [[10, "pointrix.engine.default_trainer.DefaultTrainer"]], "defaulttrainer.config (class in pointrix.engine.default_trainer)": [[10, "pointrix.engine.default_trainer.DefaultTrainer.Config"]], "call_hook() (pointrix.engine.default_trainer.defaulttrainer method)": [[10, "pointrix.engine.default_trainer.DefaultTrainer.call_hook"]], "pointrix.engine.default_trainer": [[10, "module-pointrix.engine.default_trainer"]], "test() (pointrix.engine.default_trainer.defaulttrainer method)": [[10, "pointrix.engine.default_trainer.DefaultTrainer.test"]], "train_loop() (pointrix.engine.default_trainer.defaulttrainer method)": [[10, "pointrix.engine.default_trainer.DefaultTrainer.train_loop"]], "train_step() (pointrix.engine.default_trainer.defaulttrainer method)": [[10, "pointrix.engine.default_trainer.DefaultTrainer.train_step"]]}})